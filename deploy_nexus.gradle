apply plugin: 'maven-publish'
apply plugin: 'signing'


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

javadoc {
    // <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    // 防止本地打开中文乱码
    options.addStringOption("charset", "UTF-8")
}

configurations {
    deployerJars
}

// 最主要的是这里
publishing {
    publications {
        // 这一个推送项目名称，mavenJava 相当于是一个 task name
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = project.group + ":" + project.name
                if (project.description == null || project.description.isEmpty()) {
                    description = project.group + ":" + project.name
                } else {
                    description = project.description
                }
                url = "https://github.com/azbh111/utils.git"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "azbh111"
                        name = "pan"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/azbh111/utils.git"
                    developerConnection = "scm:git:https://github.com/azbh111/utils.git"
                    url = "https://github.com/azbh111/utils"
                }
            }
        }
    }
    repositories {
        maven {
            def url_ = null;
            name 'nexus'
            if (project.version.endsWith("-SNAPSHOT")) {
                url_ = 'http://nexus.66c.pub:888/repository/maven-snapshots/'
            } else {
                url_ = 'http://nexus.66c.pub:888/repository/maven-releases/'
            }
            credentials {
                username = deploy_username
                password = deploy_password
            }
            url url_
//            println("publish to " + url_)
        }
    }
}


signing {
    sign publishing.publications.mavenJava
}

task showArchiveId {
    def name = System.getProperty("name")
    if (!project.getName().equals(name)) {
//        所有项目都会执行, 过滤掉非目标项目
        return
    }
    println "archiveId=" + project.getGroup() + ":" + project.getName() + ":" + project.getVersion()
}

task logArchiveId {
    def name = System.getProperty("name")
    if (!project.getName().equals(name)) {
//        所有项目都会执行, 过滤掉非目标项目
        return
    }
    println "构建id= " + project.getGroup() + ":" + project.getName() + ":" + project.getVersion()
    BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(rootProject.getProjectDir(), "archives.txt"), true), "UTF-8"))
    writer.newLine()
    writer.write(project.getGroup() + ":" + project.getName() + ":" + project.getVersion())
    writer.close()
}

